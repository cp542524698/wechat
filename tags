!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Array	agent.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Array	common.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Array	epoll.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
ConfigParser	common.py	/^import ConfigParser$/;"	i
ConfigParser	server.py	/^import ConfigParser$/;"	i
Epoll	agent.py	/^class Epoll(object):$/;"	c
Epoll	epoll.py	/^class Epoll(object):$/;"	c
EpollServer	epoll.py	/^def EpollServer(send, recv, g_val):$/;"	f
GetWhiteName	common.py	/^	def GetWhiteName(self):$/;"	m	class:Global
Global	common.py	/^class Global(object):$/;"	c
HandleMsg	agent.py	/^def HandleMsg():$/;"	f
Log	agent.py	/^from common import Log as Log$/;"	i
Log	common.py	/^Log = logging.getLogger('wechat')$/;"	v
Log	epoll.py	/^from common import Log as Log$/;"	i
Log	server.py	/^from common import Log as Log$/;"	i
Manager	agent.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Manager	common.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Manager	epoll.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Manager	server.py	/^from multiprocessing import Process, Manager, Value$/;"	i
Modify	agent.py	/^    def Modify(self):$/;"	m	class:Epoll
Modify	epoll.py	/^    def Modify(self, send, g_val):$/;"	m	class:Epoll
MultipartEncoder	server.py	/^from requests_toolbelt.multipart.encoder import MultipartEncoder$/;"	i
NotifyMode	agent.py	/^def NotifyMode():$/;"	f
ParserArg	common.py	/^	def ParserArg(self):$/;"	m	class:Global
Pool	agent.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Pool	common.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Pool	epoll.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Process	agent.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Process	common.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Process	epoll.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Process	server.py	/^from multiprocessing import Process, Manager, Value$/;"	i
Queue	agent.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Queue	agent.py	/^import Queue$/;"	i
Queue	common.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Queue	epoll.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Queue	epoll.py	/^import Queue$/;"	i
UnicodeStreamFilter	server.py	/^class UnicodeStreamFilter:$/;"	c
Value	agent.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Value	common.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Value	epoll.py	/^from multiprocessing import Process,Queue,Pool, Manager, Value, Array$/;"	i
Value	server.py	/^from multiprocessing import Process, Manager, Value$/;"	i
WebWeixin	server.py	/^class WebWeixin(object):$/;"	c
__init__	agent.py	/^    def __init__(self):$/;"	m	class:Epoll
__init__	common.py	/^	def __init__(self, configFile='.\/wechat.ini'):$/;"	m	class:Global
__init__	epoll.py	/^    def __init__(self):$/;"	m	class:Epoll
__init__	server.py	/^    def __init__(self):$/;"	m	class:WebWeixin
__init__	server.py	/^    def __init__(self, target):$/;"	m	class:UnicodeStreamFilter
__str__	server.py	/^    def __str__(self):$/;"	m	class:WebWeixin	file:
_decode_dict	common.py	/^def _decode_dict(data): $/;"	f
_decode_dict	server.py	/^def _decode_dict(data):$/;"	f
_decode_list	common.py	/^def _decode_list(data):$/;"	f
_decode_list	server.py	/^def _decode_list(data):$/;"	f
_echo	server.py	/^    def _echo(self, str):$/;"	m	class:WebWeixin
_genQRCode	common.py	/^def _genQRCode(uuid, url='https:\/\/login.weixin.qq.com\/l\/'):$/;"	f
_get	common.py	/^def _get(url, api=None):$/;"	f
_get	server.py	/^    def _get(self, url, api=None):$/;"	m	class:WebWeixin
_post	common.py	/^def _post(url, params, jsonfmt=True):$/;"	f
_post	server.py	/^    def _post(self, url, params, jsonfmt=True):$/;"	m	class:WebWeixin
_printQR	server.py	/^    def _printQR(self, mat):$/;"	m	class:WebWeixin
_run	server.py	/^    def _run(self, str, func, *args):$/;"	m	class:WebWeixin
_safe_open	server.py	/^    def _safe_open(self, path):$/;"	m	class:WebWeixin
_saveFile	server.py	/^    def _saveFile(self, filename, data, api=None):$/;"	m	class:WebWeixin
_searchContent	server.py	/^    def _searchContent(self, key, content, fmat='attr'):$/;"	m	class:WebWeixin
_showMsg	server.py	/^    def _showMsg(self, message):$/;"	m	class:WebWeixin
_showQRCodeImg	server.py	/^    def _showQRCodeImg(self):$/;"	m	class:WebWeixin
_simsimi	server.py	/^    def _simsimi(self, word):$/;"	m	class:WebWeixin
_str2qr	server.py	/^    def _str2qr(self, str):$/;"	m	class:WebWeixin
_transcoding	server.py	/^    def _transcoding(self, data):$/;"	m	class:WebWeixin
_xiaodoubi	server.py	/^    def _xiaodoubi(self, word):$/;"	m	class:WebWeixin
cf	common.py	/^cf = ConfigParser.ConfigParser()$/;"	v
coloredlogs	common.py	/^import coloredlogs$/;"	i
commands	common.py	/^import commands$/;"	i
common	agent.py	/^import common$/;"	i
common	epoll.py	/^import common$/;"	i
common	server.py	/^import common$/;"	i
config	common.py	/^import logging.config $/;"	i
cookielib	server.py	/^import cookielib$/;"	i
defaultdict	server.py	/^from collections import defaultdict$/;"	i
dom	server.py	/^import xml.dom.minidom$/;"	i
epoll	server.py	/^import epoll$/;"	i
errno	agent.py	/^import select, errno$/;"	i
errno	epoll.py	/^import select, errno$/;"	i
flush	server.py	/^    def flush(self):$/;"	m	class:UnicodeStreamFilter
g_val	agent.py	/^    g_val = common.Global()$/;"	v
g_val	epoll.py	/^    g_val = common.Global()$/;"	v
g_val	server.py	/^    g_val = common.Global()$/;"	v
genQRCode	server.py	/^    def genQRCode(self):$/;"	m	class:WebWeixin
getGroupID	server.py	/^    def getGroupID(self, name):$/;"	m	class:WebWeixin
getGroupName	server.py	/^    def getGroupName(self, id):$/;"	m	class:WebWeixin
getNameById	server.py	/^    def getNameById(self, id):$/;"	m	class:WebWeixin
getUSerID	server.py	/^    def getUSerID(self, name):$/;"	m	class:WebWeixin
getUUID	server.py	/^    def getUUID(self):$/;"	m	class:WebWeixin
getUserRemarkName	server.py	/^    def getUserRemarkName(self, id):$/;"	m	class:WebWeixin
handleMsg	server.py	/^    def handleMsg(self, r, send):$/;"	m	class:WebWeixin
hanle_event	agent.py	/^    def hanle_event(self):$/;"	m	class:Epoll
hanle_event	epoll.py	/^    def hanle_event(self, send, recv, g_val):$/;"	m	class:Epoll
html	server.py	/^from lxml import html$/;"	i
json	common.py	/^import json$/;"	i
json	server.py	/^import json$/;"	i
listenMsgMode	server.py	/^    def listenMsgMode(self, send):$/;"	m	class:WebWeixin
log_level	common.py	/^log_level = cf.get("debug", "level")$/;"	v
logging	common.py	/^import logging$/;"	i
logging	common.py	/^import logging.config $/;"	i
login	server.py	/^    def login(self):$/;"	m	class:WebWeixin
mimetypes	server.py	/^import mimetypes$/;"	i
minidom	server.py	/^import xml.dom.minidom$/;"	i
multiprocessing	agent.py	/^import multiprocessing$/;"	i
multiprocessing	epoll.py	/^import multiprocessing$/;"	i
multiprocessing	server.py	/^import multiprocessing$/;"	i
notifyMode	server.py	/^    def notifyMode(self, recv):$/;"	m	class:WebWeixin
os	server.py	/^import os$/;"	i
pdb	agent.py	/^import pdb $/;"	i
pdb	epoll.py	/^import pdb $/;"	i
platform	server.py	/^import platform$/;"	i
pr	agent.py	/^    pr = multiprocessing.Process(target=NotifyMode)$/;"	v
pr	epoll.py	/^    pr = multiprocessing.Process(target=process2)$/;"	v
pr	server.py	/^    pr = multiprocessing.Process(target=wechatServer, args=(send, recv))$/;"	v
process2	epoll.py	/^def process2():$/;"	f
pw	agent.py	/^    pw = multiprocessing.Process(target=HandleMsg)$/;"	v
pw	epoll.py	/^    pw = multiprocessing.Process(target=process1)$/;"	v
pw	server.py	/^    pw = multiprocessing.Process(target=epoll.EpollServer, args=(send, recv, g_val))$/;"	v
qrcode	common.py	/^import qrcode$/;"	i
qrcode	server.py	/^import qrcode$/;"	i
random	server.py	/^import random$/;"	i
re	server.py	/^import re$/;"	i
recv	agent.py	/^    recv = multiprocessing.Queue()$/;"	v
recv	epoll.py	/^    recv = multiprocessing.Queue()$/;"	v
recv	server.py	/^    recv = multiprocessing.Queue() #从client接收的 $/;"	v
requests	server.py	/^import requests$/;"	i
select	agent.py	/^import select, errno$/;"	i
select	epoll.py	/^import select, errno$/;"	i
send	agent.py	/^    send = multiprocessing.Queue()$/;"	v
send	epoll.py	/^    send = multiprocessing.Queue()$/;"	v
send	server.py	/^    send = multiprocessing.Queue() #需要下发给client的$/;"	v
sendEmotion	server.py	/^    def sendEmotion(self, name, file_name):$/;"	m	class:WebWeixin
sendImg	server.py	/^    def sendImg(self, name, file_name):$/;"	m	class:WebWeixin
sendMsg	server.py	/^    def sendMsg(self, name, word, isfile=False):$/;"	m	class:WebWeixin
sendMsgToAll	server.py	/^    def sendMsgToAll(self, word):$/;"	m	class:WebWeixin
sh_cmd	common.py	/^def sh_cmd(cmd):$/;"	f
socket	agent.py	/^import socket$/;"	i
socket	epoll.py	/^import socket$/;"	i
start	server.py	/^    def start(self, send, recv):$/;"	m	class:WebWeixin
synccheck	server.py	/^    def synccheck(self):$/;"	m	class:WebWeixin
sys	agent.py	/^import sys$/;"	i
sys	epoll.py	/^import sys$/;"	i
sys	server.py	/^import sys$/;"	i
testsynccheck	server.py	/^    def testsynccheck(self):$/;"	m	class:WebWeixin
thread	agent.py	/^import thread$/;"	i
thread	epoll.py	/^import thread$/;"	i
thread	server.py	/^import thread$/;"	i
time	agent.py	/^import time$/;"	i
time	epoll.py	/^import time$/;"	i
time	server.py	/^import time$/;"	i
urllib	common.py	/^import urllib$/;"	i
urllib	server.py	/^import urllib$/;"	i
urllib2	common.py	/^import urllib2 $/;"	i
urllib2	server.py	/^import urllib2$/;"	i
urlparse	server.py	/^from urlparse import urlparse$/;"	i
waitForLogin	server.py	/^    def waitForLogin(self, tip=1):$/;"	m	class:WebWeixin
webwxbatchgetcontact	server.py	/^    def webwxbatchgetcontact(self):$/;"	m	class:WebWeixin
webwxgetcontact	server.py	/^    def webwxgetcontact(self):$/;"	m	class:WebWeixin
webwxgetheadimg	server.py	/^    def webwxgetheadimg(self, id):$/;"	m	class:WebWeixin
webwxgeticon	server.py	/^    def webwxgeticon(self, id):$/;"	m	class:WebWeixin
webwxgetmsgimg	server.py	/^    def webwxgetmsgimg(self, msgid):$/;"	m	class:WebWeixin
webwxgetvideo	server.py	/^    def webwxgetvideo(self, msgid):$/;"	m	class:WebWeixin
webwxgetvoice	server.py	/^    def webwxgetvoice(self, msgid):$/;"	m	class:WebWeixin
webwxinit	server.py	/^    def webwxinit(self):$/;"	m	class:WebWeixin
webwxsendmsg	server.py	/^    def webwxsendmsg(self, word, to='filehelper'):$/;"	m	class:WebWeixin
webwxsendmsgemotion	server.py	/^    def webwxsendmsgemotion(self, user_id, media_id):$/;"	m	class:WebWeixin
webwxsendmsgimg	server.py	/^    def webwxsendmsgimg(self, user_id, media_id):$/;"	m	class:WebWeixin
webwxstatusnotify	server.py	/^    def webwxstatusnotify(self):$/;"	m	class:WebWeixin
webwxsync	server.py	/^    def webwxsync(self):$/;"	m	class:WebWeixin
webwxuploadmedia	server.py	/^    def webwxuploadmedia(self, image_name):$/;"	m	class:WebWeixin
wechatServer	server.py	/^def wechatServer(send, recv):$/;"	f
write	server.py	/^    def write(self, s):$/;"	m	class:UnicodeStreamFilter
xml	server.py	/^import xml.dom.minidom$/;"	i
